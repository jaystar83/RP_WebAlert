sudo apt-get install motion htop mc git 

sudo killall motion
sudo motion start
sudo service motion start

sudo nano /etc/motion/motion.conf

nano /home/juju/pyScripts/led_blink.py


http://192.168.0.XXX:8081/

https://roboticsbackend.com/raspberry-pi-gpio-interrupts-tutorial/


--------------------------------------------
motion zur GPIO Gruppe hinzufuegen

sudo usermod motion -a -G gpio

--------------------------------------------
Run as Service

The following instructions are only applicable to Debian and Ubuntu based systems. For other 
distributions, users should consult their distribution documentation and provide pull requests 
to the Motion developers so that this section can be updated with their distribution.
Motion can be set up to run as a service which means that it will start automatically whenever 
the computer is started. When setting up Motion to run as a service, it should be done only 
after all the other configuration has been completed. It is much easier to edit and revise the 
parameters when Motion is just running in a terminal rather than as a service. Motion now uses 
the systemctl and when running as a service, the option daemon must be set as off

The following commands control the Motion service.

    Start the Motion service - sudo systemctl start motion
    Stop the Motion service - sudo systemctl stop motion

When running as a service, Motion runs as the user motion and this user is automatically added 
to the user group of video. By only be included in this user group, when Motion is run, it will
only have limited permissions. It is NOT recommended that this user get added to the sudo group. 
Instead, only add this user to groups that are specifically required. 
--------------------------------------------------

---- GIT ---
chmod 0400 "id_rsa_github"

sudo systemctl status ssh

sudo systemctl enable ssh
sudo systemctl start ssh

eval `ssh-agent`
ssh-add ~/.ssh/id_rsa_github

-------------------------------------------

--- PIN für shutdown configuriern ---
https://blog.gc2.at/post/pi-herunterfahren/

-  einen Taster an einen GPIO-Eingang hängen und einen Device Tree Eintrag in der 
   Konfigurationsdatei “config.txt” einfügen. Verantwortlich dafür ist die Funktion 
   ‘gpio-shutdown’.

- “config.txt”

-------------------------------------------
Gewichtung der Berechtigungen:

  	    Eigentümer 	Gruppe 	Public
 Lesen   	 4   	 4 	    4
 Schreiben 	 2 	     2 	    2
 Ausführen 	 1 	     1 	    1

Der chmod (z.B. 644) errechnet sich durch Addition der einzelnen Werte. Soll z.B. ein PHP-Script welches unter dem Benutzer www-data ausgeführt wird die Rechte bekommen eine Datei zu ändern die dem Benutzer benutzer1 gehört und der Gruppe www-data zugewiesen ist, muss diese Datei auf Ebene der Gruppenrechte min. Lesen und Schreiben können.
Einige gängige chmod Beispiele in UNIX- / Linux-Systemen:

chmod 644
Eigentümer = lesen, schreiben
Gruppe = lesen
Public = lesen

chmod 755
Eigentümer = lesen, schreiben, ausführen
Gruppe = lesen, ausführen
Public = lesen, ausführen

chmod 777
Eigentümer = lesen, schreiben, ausführen
Gruppe = lesen, schreiben, ausführen
Public = lesen, schreiben, ausführen

 

 
